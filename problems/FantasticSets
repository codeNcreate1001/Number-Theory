#define ll long long
#define mod 1000000007
#define MAX 1000001
vector<int>freq(MAX,0);
unordered_map<int,bool>isPresent;
int fantasticSetsCnt(vector<int>&arr) {
	for(int i = 1; i < MAX; i++) {
		if(isPresent.find(i) != isPresent.end()) {
			for(ll j=i*2;j<MAX;j++) 
				if(isPresent.count(j)) freq[j]=(freq[j]+freq[i])%mod;
		}
	}
	ll res = 0;
	for(int i=0;i<MAX;i++)
		if(isPresent.count(i)) res =(res+freq[i])%mod;
	return res;
}

void solve() {
	int n,T;
	cin>>T;
	while(T--) {
		isPresent.clear();
		freq.clear();
		cin>>n;
		vector<int>arr;
		for(int i=0;i<n;i++) {
			int x;
			cin>>x;
			arr.pb(x);
			isPresent[x] = 1;
			freq[x] = 1;
		}
		cout<<fantasticSetsCnt(arr)<<"\n";
	}
	return;
}
